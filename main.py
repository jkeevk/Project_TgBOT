"""
–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Telegram –±–æ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Telebot.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Ä–µ–∞–ª–∏–∑—É–µ—Ç Telegram –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å
–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —Å–∏—Å—Ç–µ–º–æ–π –æ–±—É—á–µ–Ω–∏—è, –¥–æ–±–∞–≤–ª—è—Ç—å –∏ —É–¥–∞–ª—è—Ç—å —Å–ª–æ–≤–∞, –∞ —Ç–∞–∫–∂–µ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è
–Ω–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è.

–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏ –∫–ª–∞—Å—Å—ã:
- random: –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª.
- types –∏ TeleBot –∏–∑ telebot: –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∏–ø–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞.
- StateMemoryStorage –∏ StatesGroup –∏–∑ telebot.storage: –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
- start_reminders –∏ Notification –∏–∑ notification_scheduler: –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π.
- bot_db –∏–∑ data_base_tools: –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞.
"""
import telebot
import configparser
import random

from telebot import types, TeleBot
from telebot.storage import StateMemoryStorage
from telebot.handler_backends import State, StatesGroup

from notification_scheduler import start_reminders, Notification  
from data_base_tools import bot_db

class Command:
    """–ö–ª–∞—Å—Å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∫–Ω–æ–ø–∫–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ —É–¥–æ–±—Å—Ç–≤–∞."""
    ADD_WORD = '–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï'
    DELETE_WORD = '–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ‚ùå'
    NEXT = '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚è≠'
    RULES = 'üìú–ü—Ä–∞–≤–∏–ª–∞'
    START = 'üöÄ–ù–∞—á–∞—Ç—å'
    START_AGAIN = 'üîÑ–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ'

class MyStates(StatesGroup):
    """–ö–ª–∞—Å—Å –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –±–æ—Ç–∞."""
    english_word = State()
    russian_word = State()
    
def get_token():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω Telegram –∏–∑ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        str: —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –±–æ—Ç–∞.
    """
    config = configparser.ConfigParser()
    config.read("settings.ini")
    token_tg = config["TELEGRAM"]["token_tg"]
    return token_tg

state_storage = StateMemoryStorage()
token_tg = get_token()
bot=telebot.TeleBot(token_tg)


start_reminders(bot)
notification = Notification(bot)
@bot.message_handler(commands=['subscribe'])
def handle_subscribe(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è.
    
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    notification.start(message)

@bot.message_handler(commands=['unsubscribe'])
def handle_unsubscribe(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π.
    
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    notification.stop(message)

commands = [
    telebot.types.BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
    telebot.types.BotCommand("help", "–ü–æ–º–æ—â—å"),
    telebot.types.BotCommand("menu", "–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é"),
    telebot.types.BotCommand("subscribe", "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"),
    telebot.types.BotCommand("unsubscribe", "–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π")
]

bot.set_my_commands(commands)


@bot.message_handler(commands=['help'])
def send_help(message):
    bot.send_message(
    message.chat.id, 
    'üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n\n'
    '–ù–∞–∂–º–∏—Ç–µ "üöÄ–ù–∞—á–∞—Ç—å", —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤.\n'
    '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞. '
    'üí° –í–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–ª–æ–≤–∞.\n\n'
    '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n'
    '–ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï" —á—Ç–æ–±—ã –∏–∑—É—á–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ\n'
    '–ù–∞–∂–º–∏—Ç–µ "–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ‚ùå" —á—Ç–æ–±—ã –æ–Ω–æ –±–æ–ª—å—à–µ –Ω–µ –ø–æ—è–≤–ª—è–ª–æ—Å—å\n'
    '–ù–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚è≠" —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ª–æ–≤—É –ø–æ–∑–¥–Ω–µ–µ\n'
    'üîî –ü–æ–¥–ø–∏—à–∏—Å—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!\n\n'
    )


@bot.message_handler(commands=['menu'])
def show_menu(message):
    bot.send_message(message.chat.id, 
                     '–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n'
                      '/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n'
                      '/help - –ü–æ–º–æ—â—å\n'
                      '/menu - –ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é\n'
                      '/subscribe - –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\n'
                      '/unsubscribe - –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π\n'
    )


@bot.message_handler(commands=['start'])
def start_message(message):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∏–∫–µ—Ä –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±–æ—Ç–µ. 
    –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —á–∞—Ç–µ.
    """
    sti = open('static/welcome.webm', 'rb')
    bot.send_sticker(message.chat.id, sti)

    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    item1 = types.KeyboardButton("üìú–ü—Ä–∞–≤–∏–ª–∞")
    item2 = types.KeyboardButton("üöÄ–ù–∞—á–∞—Ç—å")
    item3 = types.KeyboardButton("üîÑ–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")
 
    markup.add(item1, item2, item3)
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n‚ú® –Ø - <b>{1.first_name}</b>, –≤–∞—à –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞!\n\nüìö –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à –ø—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º. –î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ –¥–æ—Å—Ç–∏–≥–∞—Ç—å –±–æ–ª—å—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤!".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)
    
@bot.message_handler(commands=['drop'])
def drop_progress(message):
    """–§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—Å—Ç –≤–≤–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 
    –Ω–∞–∂–∏–º–∞–µ—Ç '–¥–∞', —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —á–∞—Ç–µ.
    """
    user_id = message.from_user.id
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)        
    markup.add(types.KeyboardButton("–í –Ω–∞—á–∞–ª–æ‚Ü©Ô∏è"))
    if message.text:
        if message.text.lower() == '–¥–∞':
            bot_db.drop_progress(user_id)
            bot_db.register_user(user_id)
            bot.send_message(message.chat.id, '–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω', reply_markup=markup)
        elif message.text.lower() == '–Ω–µ—Ç':
            bot.send_message(message.chat.id, '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚Ü©Ô∏è', reply_markup=markup)
        bot.register_next_step_handler(message, start_message)
    else:
        bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
        start_message(message)

def get_user_id(message):
    """–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.

    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ ID.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        int: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user_id = message.from_user.id
    bot_db.register_user(user_id)
    bot.register_next_step_handler(message, start_word_learning_session)
    return user_id


def generate_buttons(english_word):
    """–§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —Å–ª–æ–≤.

    –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Å–ª–æ–≤–æ–º –∏ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, 
    —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –≤—ã–±–∏—Ä–∞—Ç—å –∏–∑ –Ω–∏—Ö.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        english_word (str): –ê–Ω–≥–ª–∏–π—Å–∫–æ–µ —Å–ª–æ–≤–æ, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∫–Ω–æ–ø–∫–∏.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        ReplyKeyboardMarkup: –†–∞–∑–º–µ—á–µ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏.
    """
    other_words_btns = set([english_word])    
    while len(other_words_btns) < 4:
        translation = bot_db.get_random_examples()[1]
        other_words_btns.add(translation)
    buttons = list(other_words_btns)
    random.shuffle(buttons) 
    buttons.extend([
        types.KeyboardButton(Command.NEXT),
        types.KeyboardButton(Command.ADD_WORD),
        types.KeyboardButton(Command.DELETE_WORD)
    ])
    markup = types.ReplyKeyboardMarkup(row_width=2)
    markup.add(*buttons)
    return markup

def offer_reset_progress(message):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–ª–æ–≤ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å, –µ—Å–ª–∏ —É –Ω–µ–≥–æ
    –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Å–ª–æ–≤–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å '–î–∞' –∏–ª–∏ '–ù–µ—Ç'.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —á–∞—Ç–µ.
    """
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    markup.add(types.KeyboardButton('–î–∞'), types.KeyboardButton('–ù–µ—Ç'))
    
    bot.send_message(
        message.chat.id,
        '–ü–æ—Ö–æ–∂–µ, –≤—ã –≤—ã—É—á–∏–ª–∏ –≤—Å–µ —Å–ª–æ–≤–∞!ü•á –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ?',
        reply_markup=markup
    )
    bot.register_next_step_handler(message, drop_progress)

@bot.message_handler(func=lambda message: True, content_types=['text'])
def start_word_learning_session(message):
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–µ—Å—Å–∏–∏ –æ–±—É—á–µ–Ω–∏—è —Å–ª–æ–≤.
    
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å–ª–æ–≤–∞, —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è 
    –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–µ–∫—Å—Ç –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
    """
    if message.text == Command.START:
        user_id = get_user_id(message)
        if bot_db.count_words_to_learn(user_id) != 0: # –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å–ª–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ words_to_learn –µ—â—ë –æ—Å—Ç–∞–ª–∏—Å—å —Å–ª–æ–≤–∞                                                       
            russian_word, english_word, example = bot_db.get_random_word(user_id) 
            bot.set_state(message.from_user.id, MyStates.russian_word, message.chat.id)
            with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
                data['english_word'] = english_word
            markup = generate_buttons(english_word)
            greeting = f"–í—ã–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞:\n{russian_word.capitalize()}\n–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–ª–æ–≤–∞:\n{example}"
            bot.send_message(message.chat.id, greeting, reply_markup=markup)

            bot.register_next_step_handler(message, handle_user_answer)
        else:
            offer_reset_progress(message)
    elif message.text == Command.RULES or message.text == '/help':
        send_help(message)
    elif message.text == Command.START_AGAIN:
        markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        yes_button = types.KeyboardButton('–î–∞')
        no_button = types.KeyboardButton('–ù–µ—Ç')
        markup.add(yes_button, no_button)            
        bot.send_message(message.chat.id, '–°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ?', reply_markup=markup)
        bot.register_next_step_handler(message, drop_progress)

@bot.message_handler(func=lambda message: True, content_types=['text'])
def handle_user_answer(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ –ø–µ—Ä–µ–≤–æ–¥–µ —Å–ª–æ–≤–∞.

    –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è 
    –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–≤–æ–¥–∞.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞.
    """
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        english_word = data['english_word']
    user_id = get_user_id(message)
    user_message = message.text
    if user_message:
        if user_message.lower() == english_word.lower():
            handle_correct_answer(message, user_id)
        elif user_message in ['/start', '/menu', '/subscribe', '/unsubscribe']:
            handle_special_commands(message)
        elif user_message == Command.NEXT:
            start_new_round(message)
        elif user_message == Command.ADD_WORD:
            add_new_word(message, user_id)
        elif user_message == Command.DELETE_WORD:
            delete_word(message, user_id)
        else:
            handle_incorrect_answer(message)
    else:
        bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
        start_new_round(message)

def handle_correct_answer(message, user_id):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫ –∏–∑—É—á–µ–Ω–∏—è —Å–ª–æ–≤–∞ –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ —Å–ª–æ–≤–æ –≤—ã—É—á–µ–Ω–æ 
    –¥–æ—Å—Ç–∏–≥–Ω—É–≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–∞–∑ (5).

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞.
        user_id (int): ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    bot.send_message(message.chat.id, '‚úÖ –í–µ—Ä–Ω–æ!')
    bot_db.add_learn_counter(user_id, message.text)
    
    if bot_db.check_if_learnt(user_id, message.text) == 5:
        bot.send_message(message.chat.id, f'üéâ–í—ã –≤—ã—É—á–∏–ª–∏ —Å–ª–æ–≤–æ {message.text}, —É–≥–∞–¥–∞–≤ –µ–≥–æ 5 —Ä–∞–∑!üèÜ')
    
    start_new_round(message)

def handle_incorrect_answer(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–≤–µ—Ä–Ω–æ–º –æ—Ç–≤–µ—Ç–µ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –Ω–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞.
    """
    bot.send_message(message.chat.id, '‚ùå –ù–µ –≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë')
    bot.register_next_step_handler(message, handle_user_answer)

def handle_special_commands(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –í—ã–∑—ã–≤–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥, —Ç–∞–∫–∏—Ö –∫–∞–∫ 
    –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é, –ø–æ–¥–ø–∏—Å–∫–∞ –∏ –æ—Ç–ø–∏—Å–∫–∞.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã.
    """
    command_handlers = {
        '/start': show_menu,
        '/menu': start_message,
        '/subscribe': handle_subscribe,
        '/unsubscribe': handle_unsubscribe
    }
    
    command = message.text
    command_handlers[command](message)

def start_new_round(message):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –Ω–æ–≤—ã–π —Ä–∞—É–Ω–¥ –æ–±—É—á–µ–Ω–∏—è.

    –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–≥–æ —Ä–∞—É–Ω–¥–∞ –æ–±—É—á–µ–Ω–∏—è.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–≥–æ —Ä–∞—É–Ω–¥–∞.
    """
    message.text = Command.START
    start_word_learning_session(message)

def add_new_word(message, user_id):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.

    –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞.
    –í—ã–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑—É—á–∞–µ–º—ã—Ö —Å–ª–æ–≤ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∂–µ –∏–∑—É—á–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
        user_id (int): ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    if len(bot_db.all_words_ids(user_id)) == len(bot_db.all_main_words_ids()):
        bot.send_message(message.chat.id, f'‚ùå –í—ã –¥–æ–±–∞–≤–∏–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤')
        start_new_round(message)
    else:
        new_word = bot_db.word_id_to_word(bot_db.add_word(user_id))
        bot.send_message(message.chat.id, f'üÜï–î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è: {new_word}\n'
                                        f'üìú–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑—É—á–∞–µ–º—ã—Ö —Å–ª–æ–≤: {bot_db.count_words_to_learn(user_id)}\n'
                                        f'üß†–°–ª–æ–≤ –∏–∑—É—á–µ–Ω–æ: {bot_db.count_words_already_learnt(user_id)}')
        start_new_round(message)

def delete_word(message, user_id):
    """–£–¥–∞–ª—è–µ—Ç —Å–ª–æ–≤–æ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.

    –£–¥–∞–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
        user_id (int): ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        # russian_word = data['russian_word']
        english_word = data['english_word']
    bot_db.delete_word(user_id, english_word)
    bot.send_message(message.chat.id, f'üóëÔ∏è–°–ª–æ–≤–æ —É–¥–∞–ª–µ–Ω–æ: {english_word}')
    start_new_round(message)

if __name__ == '__main__':
    print('Bot is running')
    bot.polling(none_stop=True)